--------------------------

学籍番号 : 16B14201
氏名 : 松目紘輝

--------------------------

回答3 :
3.1) ２つ目のソケット接続が開始した後で、それぞれのゲームが開始される
ようにした変更箇所の説明

l.81 start()メソッド内でGameInputThreadを習得してinitする際に、GameServerFrame gsf内に２つのGameInputThreadがあることを確認してから同時に二つのthreadを取り出してinitするようにした。



3.2)
ゲームの終了条件
（3.4と合わせて回答したい場合は、「3.4)の回答を参照」と記すこと)

3.4)の回答を参照


実装方針

l.98 calcForOneUser() メソッドがgameoverになったか否かのbooleanを返すようにし、それを得た上で l.108 それぞれのGameTextTargetをfinishさせることで終了させるようにした。



ソースコード中の実装部分

l.94 どちらかのプレイヤーがgameoverになったかを記録するboolean fin を定義
l.98 fin を更新
l.108 fin=trueで双方のGameTextTaegetをfinish()


3.3)
空欄A: thread
空欄B: UserInput
空欄C: Thread2

スレッドセーフで（ある)
スレッドセーフであると考える理由

volatile修飾されたthreadにおける書き込みがアトミックになされている上、Thread2内でthread.interrupt()されるとUserInputも終了することになり、この部分のthreadへの書き込みとthreadを用いたゲーム中判定の間には同期が取られることになるため。


問題が生じる状況





3.4)
対戦ゲームのルール説明
（利用者に説明する遊び方）

ブロック崩しのスコアで勝敗を決める。残基は5機あり、以下のルールでスコアが加算され、どちらかの残基がなくなった時点、またはどちらかのブロックがすべて破壊された時点で勝敗が決まる。
- ブロックを破壊したら加点
- 残基を減らさずにブロックを壊し続けた場合、破壊により加算されるスコアが増加
- どちらかの残基がなくなった時点で、生き残った方には画面に表示されている残基×100のスコアが加算される

それぞれのフィールドには破壊すると相手を妨害できるブロックがランダムに配置される
- 水色: 相手のバーの長さを狭くする
- 黄色: 相手のバーの高さを上げる
- 緑色: 相手のボールの速度を上げる
自分が受けた妨害は自分のブロックを壊し続けることで徐々に回復することができる。

ゲーム性を高めるためにルールで工夫した点

ブロック崩しに理不尽な運要素と駆け引き要素（大きくリードしたら、自滅して勝ってもよし）をプラスして、別の方向からゲーム性を付与した。




ルールを実現するためにどう実装したかを説明

l.190 ブロック破壊時のイベントに、破壊したブロックの種類によって異なる複数の処理を追加した。
l.131 ブロックの種類はinit時にRandom.nextInt()メソッドを用いて決定し、blocksと同じ長さの配列に、各idのブロックの種類を格納していった。
相手のバーを更新するには相手のクライアントに通知する必要があるため、l.102 out.state()メソッドを用いて渡したい数値をまとめて渡すようにした。Game04側で数値を受け取り、l.78 parseしてバーのスタイルを変更する。



ゲーム画面の改良点など、配布プログラムから改良した点

l.149 ballandscoreを間借りして、そこに追加する形で残基を表示させるようにした。
l.210 残基はボールが底辺の壁にぶつかるごとに減っていき、そのたびに残基を示す丸も消去されていく。





3.5)
勝敗決定規則の説明

回答3.4)を参照




勝敗決定規則の実装法の説明

終了時に呼ばれるl.239 gameOver()メソッドでは、
1. スコアの計算 2. スコアの比較、描画 3. finish
の三工程が実行される。
このときに比較したスコアから得れる勝敗の結果を out.gamerstate() を用いてクライアントに通知するようにしている。



3.6)
敗北案を表現するための画像加工フィルタの設計意図の説明
（どのように敗北感を演出するか）

Filter9を用いて、色あせた感じを演出することで敗北感を出す。



フィルタの実装法の説明
（技術的に、どのような演算を行ったかを説明）





実装部分についての説明
(どのファイルのどの部分を変更して、ゲーム終了時の勝敗に従い、敗者側のカメラ
にのみ画像加工を施すよう実装したかを解説)

Game09内でgamerstateが敗北を示す値になった時、出力していたTextTargetの画像（無編集）を消し、TargetImageFilterの画像を描画して表示させるようにした。


3.7)
録画したファイル名とおよその再生時間







------
来年度に向けた講義演習についての質問

講義・演習課題全体で一番記憶に残っている事柄は




演習で一番大変だった課題は何回目の何番目ですか
第　　　回の　　　番目


演習で一番将来役立ちそうだと思った課題は何回目の何番目ですか
第　　　回の　　　番目


今この講義演習に関連してより詳しく知りたいと思うこと（何点でも）





お疲れ様でした。





